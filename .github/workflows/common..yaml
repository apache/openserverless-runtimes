# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
name: Build Runtime Common Image
on: 
  push:
    tags:       
      - '*common*'
    branches-ignore: '*'
  #pull_request:
  #  branches: [main]

permissions:
  contents: write
  packages: write

jobs:
  common:
    name: Build Golang Common
    runs-on: ubuntu-latest   
    steps:
      - name: Checkout recursive
        uses: actions/checkout@v2
      - name: License check
        uses: apache/skywalking-eyes@main
      #  continue-on-error: true
      - name: Assign TAG from pull request
        if:  ${{ github.event_name == 'pull_request' }}
        run: |
          echo "IMG_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
      - name: Assign TAG from push
        if:  ${{ github.event_name != 'pull_request' }}
        run: |
          echo "IMG_TAG=$(git describe --tags --abbrev=0)" >> "$GITHUB_ENV"          
      - name: Task
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin    
      - name: Registry login
        uses: docker/login-action@v3
        with:
          #registry: registry.hub.docker.com
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v3
      #  with:
      #    version: "lab:latest"
      #    driver: cloud
      #    endpoint: "sciabarracom/openserverless-builder"
      #    use: true
      #- name: Build and push
      #  uses: docker/build-push-action@v5
      #  with:
      #    context: ./runtime/common/common1.17.1
      #    platforms: linux/amd64,linux/arm64
      #    tags: apache/openserverless-runtime-common:${{ env.IMG_TAG }}
      #    # For pull requests, export results to the build cache.
      #    # Otherwise, push to a registry.
      #    outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
      - name: Build and push
        run: |
          task build-common PUSH=true