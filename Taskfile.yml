version: '3'

dotenv: [.env]

vars:
  DRY: ""
  PUSH: ""
  BASETAG: 3.1.0-mastrogpt
  BASEIMG: ghcr.io/nuvolaris 
  COMMON_VER: common1.17.1
  COMMON: "{{.BASEIMG}}/runtime-common:{{.COMMON_VER}}"
  TAG:
    sh: git describe --tags --abbrev=0 2>/dev/null || echo latest

tasks:

  default:
  - task --list-all

  setup:
  # check we are running in ubuntu 
  - grep '^ID=' /etc/os-release | grep -i ubuntu
  - if ! which python3 | grep python3 ; then echo "python3 not found" ; exit 1; fi
  - sudo apt-get -y install python3-pip python3-virtualenv
  - python3 -m pip install ipython watchdog requests cram

  image-tag: 
    silent: true
    cmds:
    - git tag -d $(git tag) 
    - git tag -f {{.BASETAG}}.$(date +%y%m%d%H%M)
    - env PAGER= git tag

  compile: go build -o proxy

  test: 
    dir: openwhisk
    cmds:
    - go test -v

  docker-login: 
    ignore_error: true
    cmds:
    - echo $GITHUB_TOKEN | docker login -u $GITHUB_USER --password-stdin  ghcr.io 
    - docker run -it --rm --privileged tonistiigi/binfmt --install all
    - docker buildx create --name mybuilder --bootstrap --use

  build-common:
    dir: "runtime/common/{{.COMMON_VER}}"
    cmds:
    - |
      if test -n "{{.PUSH}}"
      then {{.DRY}} docker buildx build -t "{{.COMMON}}" --platform linux/amd64,linux/arm64 . --push
      else {{.DRY}} docker buildx build -t "{{.COMMON}}" . --load
      fi

  build-runtime:
    requires: { vars: [RT, VER] } 
    dir: "runtime/{{.RT}}/{{.VER}}"
    cmds:
    - |
      RUNTIME="{{.BASEIMG}}/runtime-{{.RT}}-{{.VER}}:{{.TAG}}"
      if test -n "{{.PUSH}}"
      then {{.DRY}} docker buildx build -t "$RUNTIME" --build-arg COMMON="{{.COMMON}}" --platform linux/amd64,linux/arm64 . --push
      else {{.DRY}} docker buildx build -t "$RUNTIME" --build-arg COMMON="{{.COMMON}}" . --load
      fi
      echo "Built $RUNTIME"

  build-lang:
    desc: build images for one runtime
    requires: {vars: [RT] }
    vars:
      DIRS:
        sh: ls -d  runtime/{{.RT}}/v* || echo ""
    cmds:
      - for: { var: DIRS }
        task: build-runtime
        vars:
          VER: "{{base .ITEM}}"

  build:
    - task build-lang RT=golang PUSH="{{.PUSH}}"
    - task build-lang RT=python PUSH="{{.PUSH}}"
    - task build-lang RT=nodejs PUSH="{{.PUSH}}"

  build-and-push:
  - task build PUSH=y

  run-runtime:
    requires: { vars: [RT, VER] } 
    dir: "runtime/{{.RT}}/{{.VER}}"
    cmds:
    - docker run -p 8080:8080 -ti "{{.BASEIMG}}/runtime-{{.RT}}-{{.VER}}:{{.TAG}}"

  debug-runtime:
    requires: { vars: [RT, VER] } 
    dir: "runtime/{{.RT}}/{{.VER}}"
    cmds:
    - docker run -p 8080:8080 -ti --entrypoint=/bin/bash -v $PWD:/mnt -e OW_COMPILER=/mnt/bin/compile "{{.BASEIMG}}/runtime-{{.RT}}-{{.VER}}:{{.TAG}}"

  init:
    desc: initialize a runtime running in localhost:8080 with an action 
    requires: { vars: [A] } 
    cmds:
    - nuv ide init A={{.A}}

  run:
    desc: run a command, provide a jons with '-- <json-payload>'
    cmds:
    - nuv ide run J={{.CLI_ARGS}}

  test-runtime:
    requires: { vars: [RT, VER] } 
    dir: "runtime/{{.RT}}/{{.VER}}"
    cmds:
    - docker run -p 8080:8080 -d --name=test-runtime "{{.BASEIMG}}/runtime-{{.RT}}-{{.VER}}:{{.TAG}}"
    - nuv init A={{.RT}}/{{.ITEM}}

  clean-images:
    - docker images -qa | xargs docker rmi -f 
    - yes | docker buildx prune

  build-and-push-test:
    - docker pull busybox:latest
    - docker tag busybox:latest ghcr.io/nuvolaris/busybox:{{.TAG}} 
    - docker push ghcr.io/nuvolaris/busybox:{{.TAG}} 